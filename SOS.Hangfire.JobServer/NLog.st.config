<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <!--
  The 'layout renderers' (variables like ${xx}) in NLog are not all converted to ASP.NET Core 
  and therefore gives NLog configuration exceptions during startup and also empty output.
  
  Using a NLog variable ${logLayout}, the same layout is set for all targets
    
  The filename should be set to the name of the application and the folder 'C:\artlog'
  should already be present on all machines along with the right security settings.

  The chosen archiving strategy (Day, Date) for the application DummyService creates a file output like this:
     DummyService.20190302.log
     DummyService.20190303.log
        .
        .
     DummyService.log (current file)
    
   The targets for console and debugger should of course be disabled in a production environment
  
  -->
    <variable name="logLayout" value="${longdate}|SOS.Hangfire.JobServer|${machinename}|${aspnet-environment}|${logger}|${level:uppercase=true}|${message} ${exception}"/>

    <targets>
        <target xsi:type="File" name="logfileTarget"
                fileName="C:\artlog\SOS.Hangfire.JobServer.log"
                layout="${logLayout}"
                archiveEvery="Day"
                archiveNumbering="Date" />

        <target xsi:type="Console"  name="consoleTarget"
                layout="${logLayout}" />

        <target xsi:type="Debugger" name="debuggerTarget"
                layout="${logLayout}"
                header="${logger}::Logger started"
                footer="${logger}::Logger ended" />
    </targets>

    <rules>
        <logger name="*" minlevel="Debug" writeTo="consoleTarget" />
        <logger name="*" minlevel="Debug" writeTo="debuggerTarget" />
        <logger name="*" minlevel="Info" writeTo="logfileTarget" />
    </rules>
</nlog>