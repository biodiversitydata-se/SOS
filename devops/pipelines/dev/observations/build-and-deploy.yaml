trigger: none
pr: none

variables:
# same for every application: artifact group, kubernetesServiceEndpoint and tag variables, and path to migrations Dockerfile
- template: build-variables.yaml@pipeline-templates 

# build/deploy settings
- name: imageName
  value: 'sos-observations'
- name: environment
  value: dev

# skip unneeded tasks
- name: runUnitTests
  value: false

resources:
  repositories:
  - repository: pipeline-templates
    type: git
    name: pipeline-templates

pool:
  name: linux

stages:

- stage: Test
  displayName: Run unit tests
  jobs:
  # unit tests
  - job: RunUnitTests
    displayName: Running unit tests
    steps:
    - ${{ if eq(variables.runUnitTests, true) }}:
      - template: adb-docker-build.yaml@pipeline-templates
        parameters:
          repository: '${{ lower(variables.imageName) }}-api-unit-test'
          dockerfile: '$(Build.SourcesDirectory)/pathtodockerfilehere/Dockerfile.unit-test' # we check if dockerfile exists before executing the task
          tags: |
            $(tag)

- template: build-stage-template.yaml@pipeline-templates
  parameters:
    imageName: $(imageName)
    tag: $(tag) # from variable template
    # only include what you want to build:
    pathDockerfileApi: '$(Build.SourcesDirectory)/Src/Dockerfile.observations' # full filename

- stage: Deploy
  displayName: Deploy to ${{ upper(variables.environment) }}
  jobs:
  - job: Deploy
    displayName: Deploying application
    workspace:
      clean: all
    steps:
    - template: adb-kubernetes-deploy-kustomize.yaml@pipeline-templates
      parameters:
        kubernetesServiceEndpoint: $(kubernetesServiceEndpoint)
        environment: $(imageName)-$(environment)