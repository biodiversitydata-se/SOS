apiVersion: v1
kind: Service
metadata:
  labels:
    app: datastewardship-api
  name: datastewardship-api
  namespace: datastewardship-dev
spec:
  ports:
    - port: 5000
      targetPort: 5000
  selector:
    app: datastewardship-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: datastewardship-api
  name: datastewardship-api
  namespace: datastewardship-dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: datastewardship-api
  strategy: 
      type: Recreate
  template:
    metadata:
      annotations:
        logging: "true"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-status: "update"
        vault.hashicorp.com/ca-cert: "/vault/tls/ca-bundle.crt"
        vault.hashicorp.com/tls-secret: "vault-ca-bundle"
        vault.hashicorp.com/role: "datastewardship"
        vault.hashicorp.com/agent-inject-secret-env: "kv2/data/datastewardship/dev"
        vault.hashicorp.com/agent-inject-template-env: |
          {{- with secret "kv2/data/datastewardship/dev" -}}
            {{- range $k, $v := .Data.data -}}
              export {{ $k }}="{{ $v }}"
            {{ end }}
          {{- end }}
      labels:
        app: datastewardship-api
    spec:
      serviceAccountName: datastewardship-sa
      topologySpreadConstraints: # try to spread out api instances over available nodes
      - labelSelector:
          matchLabels:
            app: datastewardship-api # pods labeled app: datastewardship-api
        maxSkew: 1
        topologyKey: kubernetes.io/hostname # 1 node = 1 topology
        whenUnsatisfiable: DoNotSchedule
      containers:
        - env:
            - name: ASPNETCORE_ENVIRONMENT
              value: k8s-dev
            - name: ApplicationInsights
              value: '{"InstrumentationKey": "SECRET_PLACEHOLDER", "EnableRequestBodyLogging": false, "EnableSearchResponseCountLogging": false}'
            - name: IdentityServer
              value: '{"Authority": "https://login-test.artdata.slu.se", "Audience": "SOS.Observations", "RequireHttpsMetadata": false}'
            - name: ProcessDbConfiguration
              value: '{"UserName": "SECRET_PLACEHOLDER", "Password": "SECRET_PLACEHOLDER", "Hosts": [{"Name": "artmongo2-1-test.artdata.slu.se","Port": 27017}],"ReplicaSetName": null,"DatabaseName": "sos-dev","UseTls": false,"AuthenticationDb": "admin","ReadBatchSize": 10000,"WriteBatchSize": 10000}'
            - name: SearchDbConfiguration
              value: '{"UserName": "SECRET_PLACEHOLDER", "Password": "SECRET_PLACEHOLDER", "Clusters": [{"Hosts": ["https://artsearch2-1-test.artdata.slu.se:9200"]}],"DebugMode": true,"IndexPrefix": "sos-dev","IndexSettings": [{"Name": "observation","NumberOfReplicas": 0,"NumberOfShards": 3,"NumberOfShardsProtected": 1,"ReadBatchSize": 10000,"WriteBatchSize": 1000,"RequestTimeout": 300,"ScrollBatchSize": 5000,"ScrollTimeout": "600s"},{"Name": "dataset","NumberOfReplicas": 0,"NumberOfShards": 1,"ReadBatchSize": 10000,"WriteBatchSize": 1000,"RequestTimeout": 300,"ScrollBatchSize": 5000,"ScrollTimeout": "600s"},{"Name": "event","NumberOfReplicas": 0,"NumberOfShards": 1,"ReadBatchSize": 10000,"WriteBatchSize": 1000,"RequestTimeout": 300,"ScrollBatchSize": 5000,"ScrollTimeout": "600s"}]}'
            - name: UserServiceConfiguration
              value: '{"BaseAddress": "https://artdatauser-st.artdata.slu.se/api","AcceptHeaderContentType": "application/json"}'
          image: adbpocreg.azurecr.io/datastewardship-api:$(Build.BuildId)
          name: datastewardship-api
          command: ["sh", "-c"]
          args: [". /vault/secrets/env && dotnet SOS.DataStewardship.Api.dll"]
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
          readinessProbe: # ready to accept traffic, failure = stops routing traffic to this pod but does not restart the pod!
            httpGet:
              path: /health
              port: 5000
              httpHeaders:
              - name: Host
                value: KubernetesReadinessProbe
            initialDelaySeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 30 # runs every 30 seconds
          resources: {}
      restartPolicy: Always
      imagePullSecrets:
        - name: regcred
