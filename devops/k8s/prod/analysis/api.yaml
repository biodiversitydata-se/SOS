apiVersion: v1
kind: Service
metadata:
  labels:
    app: sos-analysis-api
  name: sos-analysis-api
  namespace: sos-analysis
spec:
  ports:
    - port: 5000
      targetPort: 5000
  selector:
    app: sos-analysis-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sos-analysis-api
  name: sos-analysis-api
  namespace: sos-analysis
spec:
  replicas: 3
  selector:
    matchLabels:
      app: sos-analysis-api
  strategy: 
      type: Recreate
  template:
    metadata:
      annotations:
        logging: "true"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-status: "update"
        vault.hashicorp.com/ca-cert: "/vault/tls/ca-bundle.crt"
        vault.hashicorp.com/tls-secret: "vault-ca-bundle"
        vault.hashicorp.com/role: "sos-analysis"
        vault.hashicorp.com/agent-inject-secret-env: "kv2/data/sos-analysis"
        vault.hashicorp.com/agent-inject-template-env: |
          {{- with secret "kv2/data/sos-analysis" -}}
            {{- range $k, $v := .Data.data -}}
              export {{ $k }}='{{ $v }}'
            {{ end }}
          {{- end }}
      labels:
        app: sos-analysis-api
    spec:
      serviceAccountName: sos-analysis-sa
      topologySpreadConstraints: # try to spread out api instances over available nodes
      - labelSelector:
          matchLabels:
            app: sos-analysis-api # pods labeled app: sos-analysis-api
        maxSkew: 1
        topologyKey: kubernetes.io/hostname # 1 node = 1 topology
        whenUnsatisfiable: DoNotSchedule
      containers:
        - env:
          - name: ASPNETCORE_ENVIRONMENT
            value: prod
          - name: IdentityServer
            value: '{"Authority": "https://ids.artdatabanken.se", "Audience": "SOS.Observations", "RequireHttpsMetadata": false}'
          - name: AreaConfiguration
            value: '{"SwedenExtentBufferKm": 0}'
          - name: InputValaidationConfiguration
            value: '{"CountFactor": 1.1, "ElasticSearchMaxRecordsInternal": 100000, "ElasticSearchMaxRecordsPublic": 50000, "MaxBatchSize": 1000, "MaxNrElasticSearchAggregationBuckets": 65535, "SignalSearchTaxonListIds": [ 1, 7, 8, 17, 18 ], "TilesLimitInternal": 350000, "TilesLimitPublic": 65535}'
          - name: CryptoConfiguration
            value: '{"Password": "SECRET_PLACEHOLDER", "Salt": "SECRET_PLACEHOLDER"}'
          - name: ApplicationInsights
            value: '{"InstrumentationKey": "SECRET_PLACEHOLDER", "EnableRequestBodyLogging": false, "EnableSearchResponseCountLogging": true}'
          - name: UserServiceConfiguration
            value: '{"BaseAddress": "https://artdatauser.artdata.slu.se/api", "AcceptHeaderContentType": "application/json", "UserAdmin2ApiBaseAddress": "https://useradmin-api.slu.se", "ClientId": "SOS", "ClientSecret": "SECRET_PLACEHOLDER", "Scope": "useradmin.api SOS.Observations.Protected openid", "TokenUrl": "https://useradmin-auth.slu.se/connect/token", "TokenExpirationBufferInSeconds": 300, "IdentityProvider": {"Authority": "https://useradmin-auth.slu.se", "Audience": "https://sos-search.artdata.slu.se", "RequireHttpsMetadata ": false}}'
          - name: SearchDbConfiguration
            value: '{"UserName": "SECRET_PLACEHOLDER", "Password": "SECRET_PLACEHOLDER", "Clusters": [{"Hosts": ["https://artsosdata2-1.artdata.slu.se:9200", "https://artsosdata2-2.artdata.slu.se:9200", "https://artsosdata2-3.artdata.slu.se:9200"]}, {"Hosts": ["https://artsosdata2-4.artdata.slu.se:9200", "https://artsosdata2-5.artdata.slu.se:9200", "https://artsosdata2-6.artdata.slu.se:9200"]}], "DebugMode": false, "IndexPrefix": "sos", "IndexSettings": [{"Name": "observation", "NumberOfReplicas": 0, "NumberOfShards": 15, "NumberOfShardsProtected": 3, "ReadBatchSize": 10000, "WriteBatchSize": 1000, "RequestTimeout": 300, "ScrollBatchSize": 5000, "ScrollTimeout": "300s"}, {"Name": "dataset", "NumberOfReplicas": 0, "NumberOfShards": 1, "ReadBatchSize": 10000, "WriteBatchSize": 1000, "RequestTimeout": 300, "ScrollBatchSize": 5000, "ScrollTimeout": "300s"}, {"Name": "event", "NumberOfReplicas": 0, "NumberOfShards": 3, "ReadBatchSize": 10000, "WriteBatchSize": 1000, "RequestTimeout": 300, "ScrollBatchSize": 5000, "ScrollTimeout": "300s"}]}'
          - name: ProcessDbConfiguration
            value: '{"UserName": "SECRET_PLACEHOLDER", "Password": "SECRET_PLACEHOLDER", "Hosts": [{"Name": "artmongo-1.artdata.slu.se", "Port": 27017}, {"Name": "artmongo-2.artdata.slu.se", "Port": 27017}, {"Name": "artmongo-3.artdata.slu.se", "Port": 27017}], "ReplicaSetName": "mongo-prod", "DatabaseName": "sos", "UseTls": false, "AuthenticationDb": "admin", "ReadBatchSize": 10000, "WriteBatchSize": 10000}'
          - name: HangfireDbConfiguration
            value: '{"UserName": "SECRET_PLACEHOLDER", "Password": "SECRET_PLACEHOLDER", "Hosts": [{"Name": "artmongo-1.artdata.slu.se", "Port": 27017}, {"Name": "artmongo-2.artdata.slu.se", "Port": 27017}, {"Name": "artmongo-3.artdata.slu.se", "Port": 27017}], "ReplicaSetName": "mongo-prod", "DatabaseName": "sos-hangfire", "UseTls": false, "AuthenticationDb": "admin", "JobExpirationDays": 7}'
          image: adbpocreg.azurecr.io/sos-analysis-api:$(Parameters.ImageTag)
          name: sos-analysis-api
          command: ["sh", "-c"]
          args: [". /vault/secrets/env && dotnet SOS.Analysis.Api.dll"]
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
          readinessProbe: # ready to accept traffic, failure = stops routing traffic to this pod but does not restart the pod!
            httpGet:
              path: /healthz
              port: 5000
              httpHeaders:
              - name: Host
                value: KubernetesReadinessProbe
            initialDelaySeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 30 # runs every 30 seconds
          resources: {}
      restartPolicy: Always
      imagePullSecrets:
        - name: regcred
