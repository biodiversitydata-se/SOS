apiVersion: v1
kind: Service
metadata:
  labels:
    app: api
  name: api
spec:
  ports:
    - port: 5000
      targetPort: 5000
  type: LoadBalancer
  selector:
    app: api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  strategy: 
      type: Recreate
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - env:
          - name: ASPNETCORE_ENVIRONMENT
            value: k8s
          - name: AllowedOrigins
            value: 'http://localhost:4200' 
          - name: ApiTestConfiguration
            value: '{"ApiUrl": "https://sos-search-st.artdata.slu.se/", "HangfireUrl": "https://sos-hangfire-st.artdata.slu.se/hangfire"}'
          - name: ApplicationInsightsConfiguration
            value: '{"BaseAddress": "https://api.applicationinsights.io/v1", "AcceptHeaderContentType": "application/json", "InstrumentationKey": "SECRET_PLACEHOLDER", "ApiKey": "SECRET_PLACEHOLDER", "ApplicationId": "SECRET_PLACEHOLDER"}'
          - name: InstrumentationKey
            valueFrom:
              secretKeyRef:
                name: instrumentation-key
                key: InstrumentationKey
          - name: ApiKey
            valueFrom:
              secretKeyRef:
                name: api-key
                key: ApiKey
          - name: ApplicationId
            valueFrom:
              secretKeyRef:
                name: application-id
                key: ApplicationId
          - name: AuthenticationConfiguration
            value: '{"SecretKey": "SECRET_PLACEHOLDER", "SecretPassword": "SECRET_PLACEHOLDER", "Issuer": "http://localhost:5000"}'
          - name: AuthSecretKey
            valueFrom:
              secretKeyRef:
                name: auth-secret-key
                key: SecretKey
          - name: AuthSecretPassword
            valueFrom:
              secretKeyRef:
                name: auth-secret-password
                key: SecretPassword
          - name: ProcessDbConfiguration
            value: '{"UserName": "SECRET_PLACEHOLDER", "Password": "SECRET_PLACEHOLDER", "Hosts": [{"Name": "artmongo-t-1.artdata.slu.se","Port": 27017}], "ReplicaSetName": null, "DatabaseName": "sos-st", "UseTls": false, "AuthenticationDb": "admin", "ReadBatchSize": 10000, "WriteBatchSize": 10000}'
          - name: ProcessDbUserName
            valueFrom:
              secretKeyRef:
                name: process-db-username
                key: UserName
          - name: ProcessDbPassword
            valueFrom:
              secretKeyRef:
                name: process-db-password
                key: Password
          - name: SearchDbConfiguration
            value: '{"UserName": "SECRET_PLACEHOLDER", "Password": "SECRET_PLACEHOLDER", "Clusters": [{"Hosts": ["https://artsearch2-1-test.artdata.slu.se:9200"]}], "IndexPrefix": "sos-st", "IndexSettings": [{"Name": "observation", "ReadBatchSize": 10000, "RequestTimeout": 300, "ScrollBatchSize": 5000, "ScrollTimeout": "300s"}]}'
          - name: SearchDbUserName
            valueFrom:
              secretKeyRef:
                name: search-db-username
                key: UserName
          - name: SearchDbPassword
            valueFrom:
              secretKeyRef:
                name:  search-db-password
                key: Password
          - name: SearchDbTestConfiguration
            value: '{"UserName": "SECRET_PLACEHOLDER", "Password": "SECRET_PLACEHOLDER", "Clusters": [{"Hosts": ["https://artsearch2-1-test.artdata.slu.se:9200"]}], "IndexPrefix": "sos-st", "IndexSettings": [{"Name": "observation", "ReadBatchSize": 10000, "RequestTimeout": 300, "ScrollBatchSize": 5000, "ScrollTimeout": "300s"}]}'
          - name: SearchDbTestUserName
            valueFrom:
              secretKeyRef:
                name: search-db-test-username
                key: UserName
          - name: SearchDbTestPassword
            valueFrom:
              secretKeyRef:
                name: search-db-test-password
                key: Password
          # - name: RedisPassword
          #   value: 'endastILokalUtveckling'
          # - name: RedisConnectionString
          #   value: 'redis-master:6379,allowAdmin=true,password=SECRET_PLACEHOLDER' # for sentinel in adb clusters: redis:26379,serviceName=mymaster,allowAdmin=true,password=SECRET_PLACEHOLDER
          image: api
          name: api
          ports:
            - containerPort: 5000
          resources: {}
      restartPolicy: Always
      # in adb clusters we also set things like topology spread constraints and readiness probe (that uses our /healthz endpoint)!
