{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { format, parseISO } from 'date-fns';\nimport { debounce } from 'lodash';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n\nfunction LogViewerComponent_div_23_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 19)(2, \"input\", 20);\n    i0.ɵɵlistener(\"change\", function LogViewerComponent_div_23_div_1_div_3_Template_input_change_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const term_r6 = restoredCtx.$implicit;\n      const agg_r3 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.changeFilter(agg_r3.name + \"_\" + term_r6.name);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 21);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const term_r6 = ctx.$implicit;\n    const agg_r3 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"id\", agg_r3.name + \"-\" + term_r6.name);\n    i0.ɵɵproperty(\"checked\", ctx_r5.filters[agg_r3.name + \"_\" + term_r6.name]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", agg_r3.name + \"-\" + term_r6.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", term_r6.name, \" (\", term_r6.docCount, \")\");\n  }\n}\n\nfunction LogViewerComponent_div_23_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, LogViewerComponent_div_23_div_1_div_3_Template, 5, 5, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const agg_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(agg_r3.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", agg_r3.terms);\n  }\n}\n\nfunction LogViewerComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, LogViewerComponent_div_23_div_1_Template, 4, 2, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.aggregations);\n  }\n}\n\nfunction LogViewerComponent_div_30_div_1_br_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"br\");\n  }\n}\n\nfunction LogViewerComponent_div_30_div_1_br_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"br\");\n  }\n}\n\nfunction LogViewerComponent_div_30_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\")(2, \"span\", 22);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 23);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 24);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\", 24);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"span\", 25);\n    i0.ɵɵtemplate(11, LogViewerComponent_div_30_div_1_br_11_Template, 1, 0, \"br\", 17);\n    i0.ɵɵelementStart(12, \"span\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, LogViewerComponent_div_30_div_1_br_14_Template, 1, 0, \"br\", 17);\n    i0.ɵɵelementStart(15, \"span\", 26);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const entry_r13 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r12.getLogEntryClass(entry_r13.level));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r12.formatDate(entry_r13.timestamp));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(entry_r13.level);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(entry_r13.hostName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(entry_r13.processName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", entry_r13.message, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", entry_r13.errorMessage);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(entry_r13.errorMessage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", entry_r13.errorStackTrace);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(entry_r13.errorStackTrace);\n  }\n}\n\nfunction LogViewerComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LogViewerComponent_div_30_div_1_Template, 17, 11, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.logEntries);\n  }\n}\n\nfunction LogViewerComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Loading...\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LogViewerComponent = /*#__PURE__*/(() => {\n  class LogViewerComponent {\n    constructor(http, baseUrl) {\n      this.http = http;\n      this.baseUrl = baseUrl;\n      this.filters = {};\n      this.filterId = \"24h\";\n      this.textFilter = \"\";\n    }\n\n    ngOnInit() {\n      this.fetchLogs(true);\n    }\n\n    fetchLogs(initFilters) {\n      let skip = 0;\n      let take = 1000;\n      this.loading = true;\n      let filters = this.getFilters();\n      this.http.get(this.baseUrl + 'logs/latest?skip=' + skip + \"&take=\" + take + \"&filters=\" + filters + \"&timespan=\" + this.filterId + \"&textFilter=\" + this.textFilter).subscribe(result => {\n        this.logEntries = result.logEntries;\n\n        if (this.textFilter.length > 0) {\n          for (let entry of this.logEntries) {\n            entry.message = entry.message.replace(new RegExp(this.textFilter, \"gi\"), match => {\n              return '<span class=\"highlighttext\">' + match + '</span>';\n            });\n          }\n        }\n\n        this.aggregations = result.aggregations;\n\n        if (initFilters) {\n          for (let agg of this.aggregations) {\n            for (let term of agg.terms) {\n              this.filters[agg.name + '_' + term.name] = true;\n            }\n          }\n        }\n\n        this.loading = false;\n      }, error => console.error(error));\n    }\n\n    getFilters() {\n      if (!this.aggregations) {\n        return;\n      }\n\n      let filter = \"\";\n\n      for (let key in this.filters) {\n        if (this.filters[key]) {\n          filter += key + \",\";\n        }\n      }\n\n      return filter;\n    }\n\n    onTextFilterChanged(textFilter) {\n      debounce(this.fetchLogs(false), 1000);\n    }\n\n    onChangeTimespan(value) {\n      this.fetchLogs(false);\n    }\n\n    getLogEntryClass(level) {\n      if (level == \"Error\") {\n        return \"list-group-item-danger\";\n      }\n\n      return \"\";\n    }\n\n    formatDate(params) {\n      if (params) {\n        return format(parseISO(params), 'yy-MM-dd HH:mm:ss');\n      } else {\n        return '';\n      }\n    }\n\n    changeFilter(type) {\n      this.filters[type] = !this.filters[type];\n      this.fetchLogs(false);\n    }\n\n  }\n\n  LogViewerComponent.ɵfac = function LogViewerComponent_Factory(t) {\n    return new (t || LogViewerComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n  };\n\n  LogViewerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LogViewerComponent,\n    selectors: [[\"app-log-viewer\"]],\n    decls: 32,\n    vars: 5,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-sm\"], [1, \"form-group\"], [\"name\", \"filter\", \"id\", \"filter\", 1, \"form-control\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [\"value\", \"30m\"], [\"value\", \"1h\"], [\"value\", \"3h\"], [\"value\", \"6h\"], [\"value\", \"12h\"], [\"value\", \"24h\"], [\"value\", \"3d\"], [\"value\", \"7d\"], [\"class\", \"col-sm\", 4, \"ngFor\", \"ngForOf\"], [1, \"col\"], [\"for\", \"textFilterInput\"], [\"type\", \"text\", \"id\", \"textFilterInput\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"form-check\", \"form-check-inline\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"checked\", \"id\", \"change\"], [1, \"form-check-label\", 3, \"for\"], [2, \"font-weight\", \"bold\"], [2, \"margin-left\", \"5px\", \"margin-right\", \"5px\", \"font-weight\", \"bold\", \"width\", \"45px\", \"display\", \"inline-block\"], [2, \"margin-left\", \"5px\", \"margin-right\", \"5px\", \"font-style\", \"italic\"], [3, \"innerHTML\"], [2, \"white-space\", \"pre-wrap\"]],\n    template: function LogViewerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\");\n        i0.ɵɵtext(4, \"Time filter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"select\", 4);\n        i0.ɵɵlistener(\"change\", function LogViewerComponent_Template_select_change_6_listener($event) {\n          return ctx.onChangeTimespan($event.target.value);\n        })(\"ngModelChange\", function LogViewerComponent_Template_select_ngModelChange_6_listener($event) {\n          return ctx.filterId = $event;\n        });\n        i0.ɵɵelementStart(7, \"option\", 5);\n        i0.ɵɵtext(8, \"30 minutes ago\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"option\", 6);\n        i0.ɵɵtext(10, \"1 hour ago\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"option\", 7);\n        i0.ɵɵtext(12, \"3 hours ago\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\", 8);\n        i0.ɵɵtext(14, \"6 hours ago\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"option\", 9);\n        i0.ɵɵtext(16, \"12 hours ago\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"option\", 10);\n        i0.ɵɵtext(18, \"24 hours ago\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"option\", 11);\n        i0.ɵɵtext(20, \"3 days ago\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"option\", 12);\n        i0.ɵɵtext(22, \"7 days ago\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(23, LogViewerComponent_div_23_Template, 2, 1, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 1)(25, \"div\", 14)(26, \"div\", 3)(27, \"label\", 15);\n        i0.ɵɵtext(28, \"Filter text\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"input\", 16);\n        i0.ɵɵlistener(\"ngModelChange\", function LogViewerComponent_Template_input_ngModelChange_29_listener($event) {\n          return ctx.textFilter = $event;\n        })(\"input\", function LogViewerComponent_Template_input_input_29_listener() {\n          return ctx.onTextFilterChanged(ctx.textFilter);\n        });\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵtemplate(30, LogViewerComponent_div_30_Template, 2, 1, \"div\", 17);\n        i0.ɵɵtemplate(31, LogViewerComponent_div_31_Template, 2, 0, \"div\", 17);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.filterId);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", ctx.aggregations);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.textFilter);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.logEntries && !ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    styles: [\".highlighttext[_ngcontent-%COMP%]{background-color:#ff0}\"]\n  });\n  return LogViewerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}