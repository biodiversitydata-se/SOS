{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { format, parseISO, formatDuration, intervalToDuration, formatDistanceToNow, subHours } from 'date-fns';\nimport { compareAsc } from 'date-fns/esm';\nimport { MongoDbInfo } from '../models/mongodbinfo';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n\nfunction StatusComponent_div_1_span_3_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 25);\n    i0.ɵɵelement(2, \"circle\", 26);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction StatusComponent_div_1_span_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 25);\n    i0.ɵɵelement(2, \"circle\", 26);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction StatusComponent_div_1_span_3_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 25);\n    i0.ɵɵelement(2, \"circle\", 27);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction StatusComponent_div_1_span_3_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 25);\n    i0.ɵɵelement(2, \"circle\", 28);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction StatusComponent_div_1_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtemplate(1, StatusComponent_div_1_span_3_span_1_Template, 3, 0, \"span\", 0);\n    i0.ɵɵtemplate(2, StatusComponent_div_1_span_3_span_2_Template, 3, 0, \"span\", 0);\n    i0.ɵɵtemplate(3, StatusComponent_div_1_span_3_span_3_Template, 3, 0, \"span\", 0);\n    i0.ɵɵtemplate(4, StatusComponent_div_1_span_3_span_4_Template, 3, 0, \"span\", 0);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementStart(6, \"b\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \" | \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const provider_r19 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", provider_r19.status == \"Success\" && !ctx_r1.isActiveProvider(provider_r19.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", provider_r19.status == \"Success\" && !ctx_r1.activeInstanceHarvestIsOlderThanOneDay && ctx_r1.isActiveProvider(provider_r19.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", provider_r19.status == \"Success\" && ctx_r1.activeInstanceHarvestIsOlderThanOneDay && ctx_r1.isActiveProvider(provider_r19.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", provider_r19.status != \"Success\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", provider_r19.id, \" \", ctx_r1.getActiveInfo(provider_r19.id), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r1.formatFrom(provider_r19.start), \" ago)\");\n  }\n}\n\nfunction StatusComponent_div_1_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 25);\n    i0.ɵɵelement(2, \"circle\", 26);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction StatusComponent_div_1_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 25);\n    i0.ɵɵelement(2, \"circle\", 28);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nconst _c0 = function () {\n  return [\"/test\"];\n};\n\nfunction StatusComponent_div_1_a_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"a\", 2);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 15);\n    i0.ɵɵelement(2, \"path\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r4.failedTests, \" | \");\n  }\n}\n\nfunction StatusComponent_div_1_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 25);\n    i0.ɵɵelement(2, \"circle\", 28);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction StatusComponent_div_1_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 25);\n    i0.ɵɵelement(2, \"circle\", 26);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction StatusComponent_div_1_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 25);\n    i0.ɵɵelement(2, \"circle\", 27);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction StatusComponent_div_1_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 25);\n    i0.ɵɵelement(2, \"circle\", 26);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction StatusComponent_div_1_tr_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 29);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 29);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\", 29);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 29);\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\", 29);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\", 29);\n    i0.ɵɵtext(16);\n    i0.ɵɵpipe(17, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\", 29);\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\", 29);\n    i0.ɵɵtext(22);\n    i0.ɵɵpipe(23, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"td\", 29);\n    i0.ɵɵtext(25);\n    i0.ɵɵpipe(26, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"td\", 29);\n    i0.ɵɵtext(28);\n    i0.ɵɵpipe(29, \"number\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const data_r24 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r24.source);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(5, 28, data_r24.publicToday, \"1.0-0\", \"sv\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(8, 32, data_r24.publicYesterday, \"1.0-0\", \"sv\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"bg-success\", data_r24.publicToday - data_r24.publicYesterday >= 0)(\"bg-warning\", data_r24.publicToday - data_r24.publicYesterday < 0 && ctx_r9.publicYesterday != 0 && data_r24.publicToday / data_r24.publicYesterday >= 0.95)(\"bg-danger\", data_r24.publicToday - data_r24.publicYesterday < 0 && ctx_r9.publicYesterday == 0 && data_r24.publicToday / data_r24.publicYesterday < 0.95);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind3(11, 36, data_r24.publicToday - data_r24.publicYesterday, \"1.0-0\", \"sv\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(14, 40, data_r24.protectedToday, \"1.0-0\", \"sv\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(17, 44, data_r24.protectedYesterday, \"1.0-0\", \"sv\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"bg-success\", data_r24.protectedToday - data_r24.protectedYesterday >= 0)(\"bg-warning\", data_r24.protectedToday - data_r24.protectedYesterday < 0 && data_r24.protectedYesterday != 0 && data_r24.protectedToday / data_r24.protectedYesterday >= 0.95)(\"bg-danger\", data_r24.protectedToday - data_r24.protectedYesterday < 0 && (data_r24.protectedYesterday == 0 || data_r24.protectedToday / data_r24.protectedYesterday < 0.95));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind3(20, 48, data_r24.protectedToday - data_r24.protectedYesterday, \"1.0-0\", \"sv\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(23, 52, data_r24.failedToday, \"1.0-0\", \"sv\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(26, 56, data_r24.failedYesterday, \"1.0-0\", \"sv\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"bg-success\", data_r24.failedYesterday - data_r24.failedToday >= 0)(\"bg-warning\", data_r24.failedYesterday - data_r24.failedToday < 0 && data_r24.failedToday != 0 && data_r24.failedYesterday / data_r24.failedToday >= 0.95)(\"bg-danger\", data_r24.failedYesterday - data_r24.failedToday < 0 && (data_r24.failedToday == 0 || data_r24.failedYesterday / data_r24.failedToday < 0.95));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind3(29, 60, data_r24.failedToday - data_r24.failedYesterday, \"1.0-0\", \"sv\"), \" \");\n  }\n}\n\nfunction StatusComponent_div_1_tr_74_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 29);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 29);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\", 29);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 29);\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"number\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const data_r25 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r25.source);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind3(5, 10, data_r25.today, \"1.0-0\", \"sv\"), \"ms\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind3(8, 14, data_r25.yesterday, \"1.0-0\", \"sv\"), \"ms\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"bg-danger\", ctx_r10.isPerformanceRed(data_r25.today, data_r25.yesterday))(\"bg-warning\", ctx_r10.isPerformanceYellow(data_r25.today, data_r25.yesterday))(\"bg-success\", ctx_r10.isPerformanceGreen(data_r25.today, data_r25.yesterday));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind3(11, 18, data_r25.today - data_r25.yesterday, \"1.0-0\", \"sv\"), \"ms \");\n  }\n}\n\nfunction StatusComponent_div_1_div_79_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h5\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"mwl-gauge\", 30);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const disk_r27 = ctx.$implicit;\n    const ctx_r26 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(disk_r27.node);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"max\", 100)(\"min\", 0)(\"dialStartAngle\", 180)(\"dialEndAngle\", 0)(\"value\", disk_r27.percentage)(\"animated\", true)(\"label\", ctx_r26.gaugeLabelFunction)(\"color\", ctx_r26.gaugeColorFunction)(\"animationDuration\", 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Used: \", disk_r27.diskUsed, \" Total: \", disk_r27.diskTotal, \" \");\n  }\n}\n\nfunction StatusComponent_div_1_div_79_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"h2\");\n    i0.ɵɵtext(2, \"Disk usage Elasticsearch\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, StatusComponent_div_1_div_79_div_3_Template, 5, 12, \"div\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r11.searchindexinfo.allocations);\n  }\n}\n\nfunction StatusComponent_div_1_div_80_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"h2\");\n    i0.ɵɵtext(2, \"Disk usage MongoDb\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"mwl-gauge\", 30);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"number\");\n    i0.ɵɵpipe(6, \"number\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"max\", 100)(\"min\", 0)(\"dialStartAngle\", 180)(\"dialEndAngle\", 0)(\"value\", ctx_r12.mongodbinfo[0].percentage)(\"animated\", true)(\"label\", ctx_r12.gaugeLabelFunction)(\"color\", ctx_r12.gaugeColorFunction)(\"animationDuration\", 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Used: \", i0.ɵɵpipeBind1(5, 11, ctx_r12.mongodbinfo[0].diskUsed / 1000000), \"GB Total: \", i0.ɵɵpipeBind1(6, 13, ctx_r12.mongodbinfo[0].diskTotal / 1000000), \"GB \");\n  }\n}\n\nfunction StatusComponent_div_1_div_84_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31)(1, \"span\", 32);\n    i0.ɵɵtext(2, \"Running Tests...\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction StatusComponent_div_1_ag_grid_angular_102_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ag-grid-angular\", 33);\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"rowData\", ctx_r14.processingJobsRowData)(\"columnDefs\", ctx_r14.processingJobsColumnDefs);\n  }\n}\n\nfunction StatusComponent_div_1_tr_116_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 29);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 29);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const data_r28 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r28.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r28.count);\n  }\n}\n\nfunction StatusComponent_div_1_div_120_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"mwl-gauge\", 30);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const entry_r30 = ctx.$implicit;\n    const ctx_r29 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(entry_r30.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"max\", 100)(\"min\", 0)(\"dialStartAngle\", 180)(\"dialEndAngle\", 0)(\"value\", entry_r30.status == \"Healthy\" ? 100 : entry_r30.status == \"Degraded\" ? 50 : 0)(\"animated\", true)(\"label\", ctx_r29.gaugeLabelFunction)(\"color\", ctx_r29.gaugeStatusColorFunction)(\"animationDuration\", 1);\n  }\n}\n\nfunction StatusComponent_div_1_div_120_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, StatusComponent_div_1_div_120_div_1_Template, 4, 10, \"div\", 34);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r16.healthStatus.entries);\n  }\n}\n\nfunction StatusComponent_div_1_div_125_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 25);\n    i0.ɵɵelement(2, \"circle\", 26);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction StatusComponent_div_1_div_125_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 25);\n    i0.ɵɵelement(2, \"circle\", 28);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction StatusComponent_div_1_div_125_ag_grid_angular_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ag-grid-angular\", 36);\n  }\n\n  if (rf & 2) {\n    const provider_r31 = i0.ɵɵnextContext().$implicit;\n    const ctx_r34 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"rowData\", provider_r31.providersInfo)(\"columnDefs\", ctx_r34.processColumnDefs);\n  }\n}\n\nfunction StatusComponent_div_1_div_125_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\")(4, \"li\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"li\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"li\");\n    i0.ɵɵtext(9, \"Time taken: \");\n    i0.ɵɵelementStart(10, \"b\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"li\");\n    i0.ɵɵtext(13, \" Status: \");\n    i0.ɵɵtemplate(14, StatusComponent_div_1_div_125_span_14_Template, 3, 0, \"span\", 0);\n    i0.ɵɵtemplate(15, StatusComponent_div_1_div_125_span_15_Template, 3, 0, \"span\", 0);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(17, StatusComponent_div_1_div_125_ag_grid_angular_17_Template, 1, 2, \"ag-grid-angular\", 35);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const provider_r31 = ctx.$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", provider_r31.id, \" \", ctx_r17.getActiveInfo(provider_r31.id), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"Start: \", ctx_r17.formatDate(provider_r31.start), \" (\", ctx_r17.formatFrom(provider_r31.start), \" ago)\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"End: \", ctx_r17.formatDate(provider_r31.end), \" (\", ctx_r17.formatFrom(provider_r31.start), \" ago)\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r17.getTimeTaken(provider_r31.start, provider_r31.end));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", provider_r31.status == \"Success\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", provider_r31.status != \"Success\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", provider_r31.status, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", provider_r31.providersInfo);\n  }\n}\n\nfunction StatusComponent_div_1_div_128_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 25);\n    i0.ɵɵelement(2, \"circle\", 26);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction StatusComponent_div_1_div_128_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 25);\n    i0.ɵɵelement(2, \"circle\", 28);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction StatusComponent_div_1_div_128_ag_grid_angular_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ag-grid-angular\", 36);\n  }\n\n  if (rf & 2) {\n    const provider_r36 = i0.ɵɵnextContext().$implicit;\n    const ctx_r39 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"rowData\", provider_r36.providersInfo)(\"columnDefs\", ctx_r39.processColumnDefs);\n  }\n}\n\nfunction StatusComponent_div_1_div_128_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\")(4, \"li\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"li\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"li\");\n    i0.ɵɵtext(9, \"Time taken: \");\n    i0.ɵɵelementStart(10, \"b\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"li\");\n    i0.ɵɵtext(13, \" Status: \");\n    i0.ɵɵtemplate(14, StatusComponent_div_1_div_128_span_14_Template, 3, 0, \"span\", 0);\n    i0.ɵɵtemplate(15, StatusComponent_div_1_div_128_span_15_Template, 3, 0, \"span\", 0);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(17, StatusComponent_div_1_div_128_ag_grid_angular_17_Template, 1, 2, \"ag-grid-angular\", 35);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const provider_r36 = ctx.$implicit;\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", provider_r36.id, \" \", ctx_r18.getActiveInfo(provider_r36.id), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"Start: \", ctx_r18.formatDate(provider_r36.start), \" (\", ctx_r18.formatFrom(provider_r36.start), \" ago)\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"End: \", ctx_r18.formatDate(provider_r36.end), \" (\", ctx_r18.formatFrom(provider_r36.start), \" ago)\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r18.getTimeTaken(provider_r36.start, provider_r36.end));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", provider_r36.status == \"Success\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", provider_r36.status != \"Success\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", provider_r36.status, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", provider_r36.providersInfo);\n  }\n}\n\nconst _c1 = function () {\n  return [\"log-viewer\"];\n};\n\nfunction StatusComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2, \"Status info\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, StatusComponent_div_1_span_3_Template, 9, 7, \"span\", 1);\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtemplate(5, StatusComponent_div_1_span_5_Template, 3, 0, \"span\", 0);\n    i0.ɵɵtemplate(6, StatusComponent_div_1_span_6_Template, 3, 0, \"span\", 0);\n    i0.ɵɵtext(7, \" Tests \");\n    i0.ɵɵelementStart(8, \"a\", 2);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(9, \"svg\", 3);\n    i0.ɵɵelement(10, \"path\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, StatusComponent_div_1_a_12_Template, 4, 3, \"a\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, StatusComponent_div_1_span_13_Template, 3, 0, \"span\", 0);\n    i0.ɵɵtemplate(14, StatusComponent_div_1_span_14_Template, 3, 0, \"span\", 0);\n    i0.ɵɵtext(15, \" Data status | \");\n    i0.ɵɵtemplate(16, StatusComponent_div_1_span_16_Template, 3, 0, \"span\", 0);\n    i0.ɵɵtemplate(17, StatusComponent_div_1_span_17_Template, 3, 0, \"span\", 0);\n    i0.ɵɵtext(18);\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(19, \"a\", 2);\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"hr\");\n    i0.ɵɵelementStart(22, \"div\", 6)(23, \"div\", 7)(24, \"h2\");\n    i0.ɵɵtext(25, \"Data status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"table\", 8)(27, \"thead\")(28, \"tr\");\n    i0.ɵɵelement(29, \"th\");\n    i0.ɵɵelementStart(30, \"th\", 9);\n    i0.ɵɵtext(31, \"Public observations\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"th\", 9);\n    i0.ɵɵtext(33, \"Protected observations\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"th\", 9);\n    i0.ɵɵtext(35, \"Invalid observations\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(36, \"tr\")(37, \"th\", 10);\n    i0.ɵɵtext(38, \"Datasource\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"th\", 10);\n    i0.ɵɵtext(40, \"Active\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"th\", 10);\n    i0.ɵɵtext(42, \"Inactive\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(43, \"th\", 10);\n    i0.ɵɵtext(44, \"Diff\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"th\", 10);\n    i0.ɵɵtext(46, \"Active\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(47, \"th\", 10);\n    i0.ɵɵtext(48, \"Inactive\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(49, \"th\", 10);\n    i0.ɵɵtext(50, \"Diff\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(51, \"th\", 10);\n    i0.ɵɵtext(52, \"Active\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(53, \"th\", 10);\n    i0.ɵɵtext(54, \"Inactive\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(55, \"th\", 10);\n    i0.ɵɵtext(56, \"Diff\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(57, \"tbody\");\n    i0.ɵɵtemplate(58, StatusComponent_div_1_tr_58_Template, 30, 64, \"tr\", 1);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(59, \"div\", 7)(60, \"h2\");\n    i0.ɵɵtext(61, \"Performance status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(62, \"table\", 8)(63, \"thead\")(64, \"tr\")(65, \"th\", 10);\n    i0.ɵɵtext(66, \"URL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(67, \"th\", 10);\n    i0.ɵɵtext(68);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(69, \"th\", 10);\n    i0.ɵɵtext(70);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(71, \"th\", 10);\n    i0.ɵɵtext(72, \"Difference\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(73, \"tbody\");\n    i0.ɵɵtemplate(74, StatusComponent_div_1_tr_74_Template, 12, 22, \"tr\", 1);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(75, \"a\", 11);\n    i0.ɵɵtext(76, \"Details in Application insights\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(77, \"hr\");\n    i0.ɵɵelementStart(78, \"div\", 6);\n    i0.ɵɵtemplate(79, StatusComponent_div_1_div_79_Template, 4, 1, \"div\", 12);\n    i0.ɵɵtemplate(80, StatusComponent_div_1_div_80_Template, 7, 15, \"div\", 12);\n    i0.ɵɵelementStart(81, \"div\", 13)(82, \"h2\");\n    i0.ɵɵtext(83, \"Tests\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(84, StatusComponent_div_1_div_84_Template, 3, 0, \"div\", 14);\n    i0.ɵɵelementStart(85, \"a\", 2);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(86, \"svg\", 3);\n    i0.ɵɵelement(87, \"path\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(88);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(89, \"a\", 2);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(90, \"svg\", 15);\n    i0.ɵɵelement(91, \"path\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(92);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(93, \"div\");\n    i0.ɵɵtext(94);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(95, \"br\");\n    i0.ɵɵelementStart(96, \"div\")(97, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function StatusComponent_div_1_Template_button_click_97_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return ctx_r41.runTests();\n    });\n    i0.ɵɵtext(98, \"Rerun tests\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(99, \"div\", 13)(100, \"h2\");\n    i0.ɵɵtext(101, \"Current processing\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(102, StatusComponent_div_1_ag_grid_angular_102_Template, 1, 2, \"ag-grid-angular\", 18);\n    i0.ɵɵelementStart(103, \"a\", 19);\n    i0.ɵɵtext(104, \"Hangfire\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(105, \"div\", 13)(106, \"h2\");\n    i0.ɵɵtext(107, \"Failed searches\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(108, \"table\", 20)(109, \"thead\")(110, \"tr\")(111, \"th\", 10);\n    i0.ɵɵtext(112, \"URL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(113, \"th\", 10);\n    i0.ɵɵtext(114, \"Count\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(115, \"tbody\");\n    i0.ɵɵtemplate(116, StatusComponent_div_1_tr_116_Template, 5, 2, \"tr\", 1);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(117, \"a\", 21);\n    i0.ɵɵtext(118, \"Details in Application insights\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(119, \"hr\");\n    i0.ɵɵtemplate(120, StatusComponent_div_1_div_120_Template, 2, 1, \"div\", 22);\n    i0.ɵɵelement(121, \"hr\");\n    i0.ɵɵelementStart(122, \"h2\");\n    i0.ɵɵtext(123, \"Index status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(124, \"div\", 6);\n    i0.ɵɵtemplate(125, StatusComponent_div_1_div_125_Template, 18, 11, \"div\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(126, \"div\", 24);\n    i0.ɵɵelementStart(127, \"div\", 6);\n    i0.ɵɵtemplate(128, StatusComponent_div_1_div_128_Template, 18, 11, \"div\", 23);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.processInfo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.failedTests == 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.failedTests > 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(31, _c0));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.completedTests, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.failedTests > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.totalDataDifference < 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.totalDataDifference >= 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.failedCalls.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.failedCalls.length <= 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Failed search calls: \", ctx_r0.sumFailedCalls, \" | \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(32, _c1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.logDescription);\n    i0.ɵɵadvance(38);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.dataComparison);\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate(ctx_r0.getYesterdayDate());\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.getYesterYesterdayDate());\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.performanceComparison);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.searchindexinfo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.mongodbinfo);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.runningTests);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(33, _c0));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Completed: \", ctx_r0.completedTests, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(34, _c0));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Failed:\", ctx_r0.failedTests, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Total runtime:\", ctx_r0.totalRuntimeMs, \"ms\");\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.processingJobsRowData.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"href\", ctx_r0.hostingenvironment.hangfireUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.failedCalls);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.healthStatus);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.processInfo.slice(0, 2));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.processInfo.slice(2, 4));\n  }\n}\n\nfunction dateFormatter(params) {\n  if (params.value) {\n    return format(parseISO(params.value), 'yyyy-MM-dd HH:mm:ss');\n  } else {\n    return '';\n  }\n}\n\nfunction dateSinceFormatter(params) {\n  if (params.value) {\n    return 'Running for ' + formatDistanceToNow(parseISO(params.value));\n  } else {\n    return '';\n  }\n}\n\nexport let StatusComponent = /*#__PURE__*/(() => {\n  class StatusComponent {\n    constructor(http, baseUrl) {\n      this.http = http;\n      this.baseUrl = baseUrl;\n      this.statuses = [];\n      this.processColumnDefs = [{\n        field: 'processStatus',\n        sortable: true,\n        filter: true,\n        resizable: true,\n        cellRenderer: function (params) {\n          return params.value == \"Success\" ? '<svg height=\"20\" width=\"30\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"green\" /></svg><span>' + params.value + '</span>' : '<svg height=\"20\" width=\"30\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"red\" /></svg><span>' + params.value + '</span>';\n        }\n      }, {\n        field: 'harvestStatus',\n        sortable: true,\n        filter: true,\n        resizable: true,\n        cellRenderer: function (params) {\n          return params.value == \"Success\" ? '<svg height=\"20\" width=\"30\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"green\" /></svg><span>' + params.value + '</span>' : '<svg height=\"20\" width=\"30\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"red\" /></svg><span>' + params.value + '</span>';\n        }\n      }, {\n        field: 'dataProviderIdentifier',\n        sortable: true,\n        filter: true,\n        resizable: true\n      }, {\n        field: 'publicProcessCount',\n        sortable: true,\n        filter: true,\n        resizable: true\n      }, {\n        field: 'protectedProcessCount',\n        sortable: true,\n        filter: true,\n        resizable: true\n      }, {\n        field: 'processStart',\n        sortable: true,\n        filter: true,\n        resizable: true,\n        valueFormatter: dateFormatter\n      }, {\n        field: 'processEnd',\n        sortable: true,\n        filter: true,\n        resizable: true,\n        valueFormatter: dateFormatter\n      }, {\n        field: 'harvestCount',\n        sortable: true,\n        filter: true,\n        resizable: true\n      }, {\n        field: 'harvestStart',\n        sortable: true,\n        filter: true,\n        resizable: true,\n        valueFormatter: dateFormatter\n      }, {\n        field: 'harvestEnd',\n        sortable: true,\n        filter: true,\n        resizable: true,\n        valueFormatter: dateFormatter\n      }, {\n        field: 'harvestNotes',\n        sortable: false,\n        filter: false,\n        resizable: true\n      }, {\n        field: 'latestIncrementalStatus',\n        sortable: true,\n        filter: true,\n        resizable: true,\n        cellRenderer: function (params) {\n          return params.value == \"2\" ? '<svg height=\"20\" width=\"30\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"green\" /></svg><span>' + params.value + '</span>' : '<svg height=\"20\" width=\"30\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"red\" /></svg><span>' + params.value + '</span>';\n        }\n      }, {\n        field: 'latestIncrementalPublicCount',\n        sortable: true,\n        filter: true,\n        resizable: true\n      }, {\n        field: 'latestIncrementalProtectedCount',\n        sortable: true,\n        filter: true,\n        resizable: true\n      }, {\n        field: 'latestIncrementalStart',\n        sortable: true,\n        filter: true,\n        resizable: true,\n        valueFormatter: dateFormatter\n      }, {\n        field: 'latestIncrementalEnd',\n        sortable: true,\n        filter: true,\n        resizable: true,\n        valueFormatter: dateFormatter\n      }];\n      this.processRowData = [];\n      this.searchIndexColumnDefs = [{\n        field: 'node',\n        sortable: true,\n        filter: true,\n        resizable: true\n      }, {\n        field: 'percentage',\n        sortable: true,\n        filter: true,\n        resizable: true\n      }, {\n        field: 'diskUsed',\n        sortable: true,\n        filter: true,\n        resizable: true\n      }, {\n        field: 'diskTotal',\n        sortable: true,\n        filter: true,\n        resizable: true\n      }];\n      this.mongodbInfoColumnDefs = [{\n        field: 'node',\n        sortable: true,\n        filter: true,\n        resizable: true\n      }, {\n        field: 'percentage',\n        sortable: true,\n        filter: true,\n        resizable: true\n      }, {\n        field: 'diskUsed',\n        sortable: true,\n        filter: true,\n        resizable: true\n      }, {\n        field: 'diskTotal',\n        sortable: true,\n        filter: true,\n        resizable: true\n      }];\n      this.processingJobsRowData = [];\n      this.processingJobsColumnDefs = [{\n        field: 'invocationData',\n        width: 600,\n        sortable: true,\n        filter: true,\n        resizable: true\n      }, {\n        field: 'createdAt',\n        sortable: true,\n        filter: true,\n        resizable: true,\n        valueFormatter: dateFormatter\n      }, {\n        field: 'createdAt',\n        headerName: 'Runtime',\n        sortable: true,\n        filter: true,\n        resizable: true,\n        valueFormatter: dateSinceFormatter\n      }];\n      this.runningTests = false;\n      this.completedTests = 0;\n      this.failedTests = 0;\n      this.totalRuntimeMs = 0;\n      this.dataComparison = [];\n      this.totalDataDifference = 0;\n      this.performanceComparison = [];\n      this.failedCalls = [];\n      this.sumFailedCalls = 0;\n      this.activeInstanceHarvestIsOlderThanOneDay = false;\n    }\n\n    ngOnInit() {\n      this.statuses = [];\n      this.http.get(this.baseUrl + 'statusinfo/activeinstance').subscribe(result => {\n        this.activeInstance = result.activeInstance.toString();\n        this.http.get(this.baseUrl + 'statusinfo/process').subscribe(result => {\n          var _a;\n\n          this.processInfo = result;\n          this.totalDataDifference = 0;\n          let active = this.processInfo.find(p => p.id.endsWith(this.activeInstance));\n          console.log(active);\n          var activeEndDate = parseISO(active.end);\n          var oneDayAgo = subHours(new Date(), 24);\n\n          if (compareAsc(activeEndDate, oneDayAgo) == -1) {\n            this.activeInstanceHarvestIsOlderThanOneDay = true;\n          } else {\n            this.activeInstanceHarvestIsOlderThanOneDay = false;\n          }\n\n          let inactive = this.processInfo.find(p => !p.id.endsWith(this.activeInstance) && p.id.includes(\"observation\"));\n\n          for (let provider of active.providersInfo) {\n            let compare = new ProcessCompare();\n            compare.source = provider.dataProviderIdentifier;\n            compare.publicToday = provider.publicProcessCount;\n            compare.protectedToday = provider.protectedProcessCount;\n            compare.failedToday = provider.processFailCount;\n\n            if (inactive) {\n              let inactiveprovider = inactive.providersInfo.find(p => p.dataProviderId == provider.dataProviderId);\n\n              if (inactiveprovider) {\n                compare.publicYesterday = inactiveprovider.publicProcessCount;\n                compare.protectedYesterday = inactiveprovider.protectedProcessCount;\n                compare.failedYesterday = (_a = inactiveprovider.processFailCount) !== null && _a !== void 0 ? _a : 0;\n              } else {\n                compare.publicYesterday = 0;\n                compare.protectedYesterday = 0;\n                compare.failedYesterday = 0;\n              }\n            } else {\n              compare.publicYesterday = 0;\n              compare.protectedYesterday = 0;\n              compare.failedYesterday = 0;\n            }\n\n            this.totalDataDifference += compare.publicToday + compare.protectedToday - (compare.publicYesterday + compare.protectedYesterday);\n            this.dataComparison.push(compare);\n          }\n        }, error => console.error(error));\n      }, error => console.error(error));\n      this.http.get(this.baseUrl + 'statusinfo/searchindex').subscribe(result => {\n        this.searchindexinfo = result;\n      }, error => console.error(error));\n      this.http.get(this.baseUrl + 'performance/loadtestsummary').subscribe(result => {\n        this.loadTestSummary = result;\n      }, error => console.error(error));\n      this.http.get(this.baseUrl + 'statusinfo/mongoinfo').subscribe(result => {\n        this.mongodbinfo = [];\n        let info = new MongoDbInfo();\n        info.diskUsed = result.diskUsed;\n        info.diskTotal = result.diskTotal;\n        info.node = \"Mongo\";\n        info.percentage = result.diskUsed / result.diskTotal * 100;\n        info.percentage = Math.floor(info.percentage);\n        this.mongodbinfo.push(info);\n      }, error => console.error(error));\n      this.http.get(this.baseUrl + 'statusinfo/processing').subscribe(result => {\n        this.processingJobsRowData = result;\n      }, error => console.error(error));\n      this.http.get(this.baseUrl + 'performance/failed').subscribe(result => {\n        this.failedCalls = result;\n        this.sumFailedCalls = 0;\n\n        for (var call of this.failedCalls) {\n          this.sumFailedCalls += call.count;\n        }\n      }, error => console.error(error));\n      this.http.get(this.baseUrl + 'hostingenvironment').subscribe(result => {\n        this.hostingenvironment = result;\n      }, error => console.error(error));\n      this.http.get(this.baseUrl + \"logs/latest?timespan=24h&take=1\").subscribe(result => {\n        let aggregations = result.aggregations;\n        let agg = aggregations.filter(p => p.name === \"Log Levels\")[0];\n        let infoCount = 0;\n        let debugCount = 0;\n        let errorCount = 0;\n\n        if (agg) {\n          if (agg.terms.filter(p => p.name == \"Info\").length > 0) {\n            infoCount = agg.terms.filter(p => p.name == \"Info\")[0].docCount;\n          }\n\n          if (agg.terms.filter(p => p.name == \"Debug\").length > 0) {\n            debugCount = agg.terms.filter(p => p.name == \"Debug\")[0].docCount;\n          }\n\n          if (agg.terms.filter(p => p.name == \"Error\").length > 0) {\n            errorCount = agg.terms.filter(p => p.name == \"Error\")[0].docCount;\n          }\n        }\n\n        this.logDescription = \"Logs last 24h: Info (\" + infoCount + \") Debug (\" + debugCount + \") Error (\" + errorCount + \")\";\n      }, error => console.error(error));\n      this.runTests();\n      this.http.get(this.baseUrl + 'performance?timespan=P3D&interval=P1D').subscribe(result => {\n        this.performanceComparison = [];\n\n        for (var request of result.requests) {\n          if (request.length == 4) {\n            let compare = new DataCompare();\n            compare.source = request[0].requestName;\n            compare.today = request[2].timeTakenMs;\n            compare.yesterday = request[1].timeTakenMs;\n            this.performanceComparison.push(compare);\n          }\n        }\n      });\n      this.http.get(this.baseUrl + 'health').subscribe(result => {\n        this.healthStatus = result;\n      }, error => console.error(error));\n    }\n\n    formatDate(param) {\n      return format(parseISO(param), 'yyyy-MM-dd HH:mm:ss');\n    }\n\n    formatFrom(param) {\n      return formatDistanceToNow(parseISO(param));\n    }\n\n    getTimeTaken(start, end) {\n      var startDate = parseISO(start);\n      var endDate = parseISO(end);\n      var duration = intervalToDuration({\n        start: startDate,\n        end: endDate\n      });\n      return formatDuration(duration);\n    }\n\n    getActiveInfo(providerId) {\n      if (this.isActiveProvider(providerId)) {\n        return \"(active)\";\n      }\n\n      if (this.isActiveProvider(providerId)) {\n        return \"(active)\";\n      }\n\n      return '';\n    }\n\n    isActiveProvider(providerId) {\n      if (this.activeInstance == \"0\" && providerId.endsWith(\"0\")) {\n        return true;\n      }\n\n      if (this.activeInstance == \"1\" && providerId.endsWith(\"1\")) {\n        return true;\n      }\n\n      return false;\n    }\n\n    isPerformanceRed(today, yesterday) {\n      let percentage = yesterday / today;\n\n      if (percentage <= 0.5) {\n        return true;\n      }\n\n      return false;\n    }\n\n    isPerformanceYellow(today, yesterday) {\n      let percentage = yesterday / today;\n\n      if (percentage < 1.0 && percentage > 0.5) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    isPerformanceGreen(today, yesterday) {\n      if (today <= yesterday) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    getYesterdayDate() {\n      return format(subHours(new Date(), 24), 'MMM dd');\n    }\n\n    getYesterYesterdayDate() {\n      return format(subHours(new Date(), 48), 'MMM dd');\n    }\n\n    gaugeColorFunction(value) {\n      if (value < 75) {\n        return \"green\";\n      } else if (value > 75 && value < 90) {\n        return \"blue\";\n      } else {\n        return \"red\";\n      }\n    }\n\n    gaugeStatusColorFunction(value) {\n      if (value > 75) {\n        return \"green\";\n      }\n\n      if (value > 40) {\n        return \"blue\";\n      }\n\n      return \"red\";\n    }\n\n    gaugeLabelFunction(value) {\n      return value + '%';\n    }\n\n    runTests() {\n      this.runningTests = true;\n      this.completedTests = 0;\n      this.failedTests = 0;\n      this.totalRuntimeMs = 0;\n      this.http.get(this.baseUrl + 'tests').subscribe(result => {\n        for (let test of result) {\n          test.currentStatus = \"Unknown\";\n        }\n\n        let testsRemaining = result.length;\n\n        for (let test of result) {\n          this.http.get('tests/' + test.route).subscribe(result => {\n            if (result) {\n              this.totalRuntimeMs += result.timeTakenMs;\n\n              for (let message of result.results) {\n                if (message.status == \"Succeeded\") {\n                  this.completedTests++;\n                }\n\n                if (message.status == \"Failed\") {\n                  this.failedTests++;\n                }\n              }\n            }\n\n            testsRemaining--;\n\n            if (testsRemaining == 0) {\n              this.runningTests = false;\n            }\n          }, error => {\n            testsRemaining--;\n\n            if (testsRemaining == 0) {\n              this.runningTests = false;\n            }\n\n            this.failedTests++;\n          });\n        }\n      }, error => console.error(error));\n    }\n\n  }\n\n  StatusComponent.ɵfac = function StatusComponent_Factory(t) {\n    return new (t || StatusComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n  };\n\n  StatusComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StatusComponent,\n    selectors: [[\"app-status\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"], [\"width\", \"1em\", \"height\", \"1em\", \"viewBox\", \"0 0 16 16\", \"fill\", \"green\", \"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"bi\", \"bi-check\"], [\"fill-rule\", \"evenodd\", \"d\", \"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\"], [3, \"routerLink\", 4, \"ngIf\"], [1, \"row\"], [1, \"col\"], [1, \"table\", \"table-striped\"], [\"scope\", \"col\", \"colspan\", \"3\", 2, \"text-align\", \"center\"], [\"scope\", \"col\"], [\"target\", \"_blank\", \"href\", \"https://portal.azure.com/#@svelantbruksuniversitet.onmicrosoft.com/resource/subscriptions/86477f0b-e000-4738-ba92-59b14bc73fa3/resourceGroups/911AppInsights-prod/providers/microsoft.insights/components/SOS-Observation-API/performance\"], [\"class\", \"col-sm\", 4, \"ngIf\"], [1, \"col-sm\"], [\"class\", \"spinner-border\", \"role\", \"status\", 4, \"ngIf\"], [\"width\", \"1em\", \"height\", \"1em\", \"viewBox\", \"0 0 16 16\", \"fill\", \"red\", \"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"bi\", \"bi-x\"], [\"fill-rule\", \"evenodd\", \"d\", \"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"style\", \"height: 200px;\", \"class\", \"ag-theme-alpine\", 3, \"rowData\", \"columnDefs\", 4, \"ngIf\"], [\"target\", \"_blank\", 3, \"href\"], [1, \"table-small\", \"table-striped\"], [\"target\", \"_blank\", \"href\", \"https://portal.azure.com/#@svelantbruksuniversitet.onmicrosoft.com/resource/subscriptions/86477f0b-e000-4738-ba92-59b14bc73fa3/resourceGroups/911AppInsights-prod/providers/microsoft.insights/components/SOS-Observation-API/failures\"], [\"class\", \"row\", 4, \"ngIf\"], [\"class\", \"col\", 4, \"ngFor\", \"ngForOf\"], [2, \"height\", \"30px\"], [\"height\", \"20\", \"width\", \"25\"], [\"cx\", \"10\", \"cy\", \"10\", \"r\", \"8\", \"fill\", \"green\"], [\"cx\", \"10\", \"cy\", \"10\", \"r\", \"8\", \"fill\", \"gold\"], [\"cx\", \"10\", \"cy\", \"10\", \"r\", \"8\", \"fill\", \"red\"], [\"scope\", \"row\"], [3, \"max\", \"min\", \"dialStartAngle\", \"dialEndAngle\", \"value\", \"animated\", \"label\", \"color\", \"animationDuration\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"sr-only\"], [1, \"ag-theme-alpine\", 2, \"height\", \"200px\", 3, \"rowData\", \"columnDefs\"], [\"class\", \"col-sm\", 4, \"ngFor\", \"ngForOf\"], [\"style\", \"height: 300px;\", \"class\", \"ag-theme-alpine\", 3, \"rowData\", \"columnDefs\", 4, \"ngIf\"], [1, \"ag-theme-alpine\", 2, \"height\", \"300px\", 3, \"rowData\", \"columnDefs\"]],\n    template: function StatusComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, StatusComponent_div_1_Template, 129, 35, \"div\", 0);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.processInfo);\n      }\n    },\n    styles: [\".green[_ngcontent-%COMP%]{color:#006400}.red[_ngcontent-%COMP%]{color:red}.yellow[_ngcontent-%COMP%]{color:#9c8d18}\"]\n  });\n  return StatusComponent;\n})();\n\nclass ProcessCompare {}\n\nclass DataCompare {}\n\nclass FailedCalls {}\n\nclass HealthStatus {}\n\nclass HealthEntry {}","map":null,"metadata":{},"sourceType":"module"}