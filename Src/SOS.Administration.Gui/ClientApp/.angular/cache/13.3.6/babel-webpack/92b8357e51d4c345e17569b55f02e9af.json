{"ast":null,"code":"import { DatePipe, DecimalPipe, registerLocaleData } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\nimport { LeafletMarkerClusterModule } from '@asymmetrik/ngx-leaflet-markercluster';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { ChartsModule, ThemeService } from 'ng2-charts';\nimport { GaugeModule } from 'angular-gauge';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { DlDateTimeDateModule, DlDateTimePickerModule } from 'angular-bootstrap-datetimepicker';\nimport { AppComponent } from './app.component';\nimport { ApplicationInsightsComponent } from './application-insights/application-insights.component';\nimport { InvalidObservationsComponent } from './invalid-observations/invalid-observations.component';\nimport { StatusComponent } from './status/status.component';\nimport { FunctionalTestsComponent } from './functional-tests/functional-tests.component';\nimport { PerformanceChartComponent } from './performance-chart/performance-chart.component';\nimport { LoadTestComponent } from './load-test/load-test.component';\nimport { ObservationViewerComponent } from './observation-viewer/observation-viewer.component';\nimport { LoginComponent } from './login/login.component';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { AuthGuard } from './guard/authguard';\nimport { LogViewerComponent } from './log-viewer/log-viewer.component';\nimport { ProtectedLogComponent } from './protected-log/protected-log.component';\nimport { FileService } from './services/file-service';\nimport localeSv from '@angular/common/locales/sv';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ag-grid-angular\";\nimport * as i4 from \"angular-gauge\";\nimport * as i5 from \"@auth0/angular-jwt\";\nregisterLocaleData(localeSv, 'sv');\nexport function tokenGetter() {\n  return localStorage.getItem(\"jwt\");\n}\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [ThemeService, AuthGuard, DatePipe, DecimalPipe, FileService],\n    imports: [[BrowserModule.withServerTransition({\n      appId: 'ng-cli-universal'\n    }), HttpClientModule, FormsModule, RouterModule.forRoot([{\n      path: '',\n      component: StatusComponent,\n      pathMatch: 'full'\n    }, {\n      path: 'invalid-observations',\n      component: InvalidObservationsComponent\n    }, {\n      path: 'status',\n      component: StatusComponent\n    }, {\n      path: 'test',\n      component: FunctionalTestsComponent\n    }, {\n      path: 'stats',\n      component: PerformanceChartComponent\n    }, {\n      path: 'loadtest',\n      component: LoadTestComponent\n    }, {\n      path: 'log-viewer',\n      component: LogViewerComponent\n    }, {\n      path: 'observation-viewer',\n      component: ObservationViewerComponent,\n      canActivate: [AuthGuard]\n    }, {\n      path: 'application-insights',\n      component: ApplicationInsightsComponent\n    }, {\n      path: 'protected-log',\n      component: ProtectedLogComponent,\n      canActivate: [AuthGuard]\n    }, {\n      path: 'login',\n      component: LoginComponent\n    }]), LeafletModule, LeafletMarkerClusterModule, ChartsModule, AgGridModule.withComponents([]), GaugeModule.forRoot(), NgxDatatableModule, DlDateTimeDateModule, DlDateTimePickerModule, JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        allowedDomains: [\"localhost:44315\", \"sos-admin.artdata.slu.se\", \"sos-admin-st.artdata.slu.se\"],\n        disallowedRoutes: []\n      }\n    })]]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}