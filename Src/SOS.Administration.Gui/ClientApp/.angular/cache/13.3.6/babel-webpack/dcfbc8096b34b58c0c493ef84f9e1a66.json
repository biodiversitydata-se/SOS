{"ast":null,"code":"import { DatePipe } from '@angular/common';\nimport { FileService } from '../services/file-service';\nimport { saveAs } from 'file-saver';\nimport * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../services/file-service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"angular-bootstrap-datetimepicker\";\nexport let ProtectedLogComponent = /*#__PURE__*/(() => {\n  class ProtectedLogComponent {\n    constructor(datePipe, _fileService, baseUrl) {\n      this.datePipe = datePipe;\n      this._fileService = _fileService;\n      this.startDate = null;\n      this.endDate = null;\n      moment.locale('sv', {\n        longDateFormat: {\n          LT: 'HH:mm',\n          LTS: 'HH:mm:ss',\n          L: 'YYYY-MM-DD',\n          LL: 'D MMMM YYYY',\n          LLL: 'D MMMM YYYY [kl.] HH:mm',\n          LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n          lll: 'D MMM YYYY HH:mm',\n          llll: 'ddd D MMM YYYY HH:mm'\n        }\n      });\n      this._baseUrl = baseUrl;\n    }\n\n    formatDate(date) {\n      return this.datePipe.transform(date, \"yyyy-MM-dd HH:mm\");\n    }\n\n    onSearchFormSubmit(event) {\n      this._fileService.downloadFile(`${this._baseUrl}protectedLog?from=${this.formatDate(this.startDate)}&to=${this.formatDate(this.endDate)}`).subscribe(blob => saveAs(blob, 'logdata.csv')), error => console.log('Error downloading the file');\n    }\n\n  }\n\n  ProtectedLogComponent.ɵfac = function ProtectedLogComponent_Factory(t) {\n    return new (t || ProtectedLogComponent)(i0.ɵɵdirectiveInject(i1.DatePipe), i0.ɵɵdirectiveInject(i2.FileService), i0.ɵɵdirectiveInject('BASE_URL'));\n  };\n\n  ProtectedLogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProtectedLogComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 14,\n    vars: 5,\n    consts: [[1, \"gy-2\", \"gx-3\", \"align-items-center\", 3, \"ngSubmit\"], [1, \"form-row\"], [1, \"col-md-4\"], [\"for\", \"startDate\", 1, \"form-label\"], [\"name\", \"startDate\", \"maxView\", \"year\", \"minView\", \"minute\", \"startView\", \"day\", \"minuteStep\", \"5\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"endDate\", 1, \"form-label\"], [\"name\", \"endDate\", \"maxView\", \"year\", \"minView\", \"minute\", \"startView\", \"day\", \"minuteStep\", \"5\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n    template: function ProtectedLogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ProtectedLogComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSearchFormSubmit(ctx);\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Start date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"dl-date-time-picker\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function ProtectedLogComponent_Template_dl_date_time_picker_ngModelChange_5_listener($event) {\n          return ctx.startDate = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"End date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"dl-date-time-picker\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function ProtectedLogComponent_Template_dl_date_time_picker_ngModelChange_9_listener($event) {\n          return ctx.endDate = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 2)(11, \"div\")(12, \"button\", 7);\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.startDate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.endDate);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !(ctx.startDate && ctx.endDate));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate2(\"Download log data items from \", ctx.formatDate(ctx.startDate), \" to \", ctx.formatDate(ctx.endDate), \"\");\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i4.DlDateTimePickerComponent, i3.NgControlStatus, i3.NgModel],\n    encapsulation: 2\n  });\n  return ProtectedLogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}