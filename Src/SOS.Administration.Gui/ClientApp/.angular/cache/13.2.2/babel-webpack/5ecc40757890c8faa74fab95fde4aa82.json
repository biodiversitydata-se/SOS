{"ast":null,"code":"import { DatePipe } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/common/http\";\n\nfunction ApplicationInsightsComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelementStart(1, \"span\", 18);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ApplicationInsightsComponent = /*#__PURE__*/(() => {\n  class ApplicationInsightsComponent {\n    constructor(datePipe, http, baseUrl) {\n      this.datePipe = datePipe;\n      this.startDate = null;\n      this.endDate = null;\n      this.loadingData = false;\n      this.columnMode = ColumnMode;\n      this.columnDefs = [{\n        prop: 'date',\n        name: 'Issue date'\n      }, {\n        prop: 'endpoint',\n        name: 'Endpoint'\n      }, {\n        prop: 'method',\n        name: 'Http method'\n      }, {\n        prop: 'protectedObservations',\n        name: 'Protected observations'\n      }, {\n        prop: 'requestBody',\n        name: 'Request body'\n      }, {\n        prop: 'success',\n        name: 'Sucess'\n      }, {\n        prop: 'httpResponseCode',\n        name: 'Http response code'\n      }, {\n        prop: 'duration',\n        name: 'Duration'\n      }, {\n        prop: 'observationCount',\n        name: 'Count'\n      }, {\n        prop: 'accountId',\n        name: 'APIM account id'\n      }, {\n        prop: 'userId',\n        name: 'User admin id'\n      }, {\n        prop: 'requestingSystem',\n        name: 'Requesting system'\n      }, {\n        prop: 'requestingSystems',\n        name: 'Requesting systems'\n      }];\n      moment.locale('sv', {\n        longDateFormat: {\n          LT: 'HH:mm',\n          LTS: 'HH:mm:ss',\n          L: 'YYYY-MM-DD',\n          LL: 'D MMMM YYYY',\n          LLL: 'D MMMM YYYY [kl.] HH:mm',\n          LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n          lll: 'D MMM YYYY HH:mm',\n          llll: 'ddd D MMM YYYY HH:mm'\n        }\n      });\n      this._http = http;\n      this._baseUrl = baseUrl;\n      this.top = 100;\n    }\n\n    formatDate(date) {\n      return this.datePipe.transform(date, \"yyyy-MM-dd HH:mm\");\n    }\n\n    onSearchFormSubmit(event) {\n      this.loadingData = true;\n\n      this._http.get(`${this._baseUrl}applicationInsights/search?from=${this.formatDate(this.startDate)}&to=${this.formatDate(this.endDate)}&top=${this.top}`).subscribe(result => {\n        this.logRows = result;\n        this.loadingData = false;\n      });\n    }\n\n  }\n\n  ApplicationInsightsComponent.ɵfac = function ApplicationInsightsComponent_Factory(t) {\n    return new (t || ApplicationInsightsComponent)(i0.ɵɵdirectiveInject(i1.DatePipe), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n  };\n\n  ApplicationInsightsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ApplicationInsightsComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 29,\n    vars: 18,\n    consts: [[1, \"gy-2\", \"gx-3\", \"align-items-center\", 3, \"ngSubmit\"], [1, \"form-row\"], [1, \"col-md-4\"], [\"for\", \"startDate\", 1, \"form-label\"], [\"name\", \"startDate\", \"maxView\", \"year\", \"minView\", \"minute\", \"startView\", \"day\", \"minuteStep\", \"5\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"endDate\", 1, \"form-label\"], [\"name\", \"endDate\", \"maxView\", \"year\", \"minView\", \"minute\", \"startView\", \"day\", \"minuteStep\", \"5\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-check\", \"form-check-inline\"], [\"type\", \"radio\", \"name\", \"top\", \"id\", \"top100\", \"che\", \"\", 1, \"form-check-input\", 3, \"value\", \"ngModel\", \"ngModelChange\"], [\"for\", \"top100\", 1, \"form-check-label\"], [\"type\", \"radio\", \"name\", \"top\", \"id\", \"top500\", 1, \"form-check-input\", 3, \"value\", \"ngModel\", \"ngModelChange\"], [\"for\", \"top500\", 1, \"form-check-label\"], [\"type\", \"radio\", \"name\", \"top\", \"id\", \"top1000\", 1, \"form-check-input\", 3, \"value\", \"ngModel\", \"ngModelChange\"], [\"for\", \"top1000\", 1, \"form-check-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border\", \"role\", \"status\", 4, \"ngIf\"], [\"rowHeight\", \"auto\", 1, \"bootstrap\", 3, \"rows\", \"columns\", \"columnMode\", \"headerHeight\", \"footerHeight\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"sr-only\"]],\n    template: function ApplicationInsightsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ApplicationInsightsComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSearchFormSubmit(ctx);\n        });\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Start date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"dl-date-time-picker\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function ApplicationInsightsComponent_Template_dl_date_time_picker_ngModelChange_5_listener($event) {\n          return ctx.startDate = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵelementStart(7, \"label\", 5);\n        i0.ɵɵtext(8, \"End date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"dl-date-time-picker\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function ApplicationInsightsComponent_Template_dl_date_time_picker_ngModelChange_9_listener($event) {\n          return ctx.endDate = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 2);\n        i0.ɵɵelementStart(11, \"div\");\n        i0.ɵɵelementStart(12, \"div\", 7);\n        i0.ɵɵelementStart(13, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function ApplicationInsightsComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.top = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"label\", 9);\n        i0.ɵɵtext(15, \"100\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 7);\n        i0.ɵɵelementStart(17, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function ApplicationInsightsComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.top = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"label\", 11);\n        i0.ɵɵtext(19, \"500\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 7);\n        i0.ɵɵelementStart(21, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function ApplicationInsightsComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.top = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"label\", 13);\n        i0.ɵɵtext(23, \"1000\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\");\n        i0.ɵɵelementStart(25, \"button\", 14);\n        i0.ɵɵtext(26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(27, ApplicationInsightsComponent_div_27_Template, 3, 0, \"div\", 15);\n        i0.ɵɵelement(28, \"ngx-datatable\", 16);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.startDate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.endDate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", 100)(\"ngModel\", ctx.top);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", 500)(\"ngModel\", ctx.top);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", 1000)(\"ngModel\", ctx.top);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !(ctx.startDate && ctx.endDate));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate3(\"Get \", ctx.top, \" log data items from \", ctx.formatDate(ctx.startDate), \" to \", ctx.formatDate(ctx.endDate), \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingData);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"rows\", ctx.logRows)(\"columns\", ctx.columnDefs)(\"columnMode\", ctx.columnMode.force)(\"headerHeight\", 50)(\"footerHeight\", 50);\n      }\n    },\n    encapsulation: 2\n  });\n  return ApplicationInsightsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}