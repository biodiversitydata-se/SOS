{"ast":null,"code":"import LazyWrapper from './_LazyWrapper.js';\nimport LodashWrapper from './_LodashWrapper.js';\nimport reverse from './reverse.js';\nimport thru from './thru.js';\n/**\n * This method is the wrapper version of `_.reverse`.\n *\n * **Note:** This method mutates the wrapped array.\n *\n * @name reverse\n * @memberOf _\n * @since 0.1.0\n * @category Seq\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _(array).reverse().value()\n * // => [3, 2, 1]\n *\n * console.log(array);\n * // => [3, 2, 1]\n */\n\nfunction wrapperReverse() {\n  var value = this.__wrapped__;\n\n  if (value instanceof LazyWrapper) {\n    var wrapped = value;\n\n    if (this.__actions__.length) {\n      wrapped = new LazyWrapper(this);\n    }\n\n    wrapped = wrapped.reverse();\n\n    wrapped.__actions__.push({\n      'func': thru,\n      'args': [reverse],\n      'thisArg': undefined\n    });\n\n    return new LodashWrapper(wrapped, this.__chain__);\n  }\n\n  return this.thru(reverse);\n}\n\nexport default wrapperReverse;","map":null,"metadata":{},"sourceType":"module"}