# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  name: default

parameters:
- name: environment
  displayName: State environment
  type: string
  default: st
  values:
  - dev
  - st
  - at
  - prod

variables:
  - name: env_variables
    ${{ if eq(parameters.environment, 'dev') }}:
      value: dev.postman_environment.json
    ${{ if eq(parameters.environment, 'st') }}:
      value: st.postman_environment.json
    ${{ if eq(parameters.environment, 'at') }}:
      value: at.postman_environment.json
    ${{ if eq(parameters.environment, 'prod') }}:
      value: prod.postman_environment.json

steps:
- task: DeleteFiles@1
  displayName: 'Remove old files'
  inputs:
    contents: $(build.artifactstagingdirectory)\Results\**\*.xml
- checkout: self
- task: Npm@1
  displayName: Install newman
  inputs:
    command: 'custom'
    workingDir: Tests/Postman
    customCommand: 'install newman newman-reporter-htmlextra'
    verbose: false 
- task: CmdLine@2
  displayName: Run tests
  inputs:
    workingDirectory: Tests/Postman
#script: ./node_modules/.bin/newman run "SOS Health Check - 1.5.postman_collection" -e $(env_variables) -r junit --reporter-junit-export $(build.artifactstagingdirectory)\Results\JunitResults.xml
    script: ./node_modules/.bin/newman run "SOS Health Check - 1.5.postman_collection" -e $(env_variables) -x -r junit --reporter-junit-export $(build.artifactstagingdirectory)\Results\SOS_Search\JunitResults.xml
- task: PublishTestResults@2
  displayName: Publish Test Results
  inputs:
    testResultsFiles: '**\*.xml'
    searchFolder: $(build.artifactstagingdirectory)\Results\SOS_Search

